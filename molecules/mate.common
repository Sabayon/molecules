# Define an alternative execution strategy, in this case, the value must be
# "iso_remaster"
execution_strategy: iso_remaster

# Release string
release_string: Sabayon Linux

# File to write release string
release_file: /etc/sabayon-edition

# ISO Image title
iso_title: SABAYON

# Enable XZ compression in mksquashfs
extra_mksquashfs_parameters: -b 131072 -comp xz

# Outer chroot script command, to be executed outside destination chroot before
# before entering it (and before inner_chroot_script)
%env outer_chroot_script: ${SABAYON_MOLECULE_HOME:-/sabayon}/scripts/remaster_pre.sh

# Execute repositories update here, in a more fault-tolerant flavor
%env inner_chroot_script: ${SABAYON_MOLECULE_HOME:-/sabayon}/scripts/remaster_generic_inner_chroot_script.sh

# Inner chroot script command, to be executed inside destination chroot after
# packages installation and removal
%env inner_chroot_script_after: ${SABAYON_MOLECULE_HOME:-/sabayon}/scripts/remaster_generic_inner_chroot_script_after.sh mate

# Outer chroot script command, to be executed outside destination chroot before
# before entering it (and AFTER inner_chroot_script)
%env outer_chroot_script_after: ${SABAYON_MOLECULE_HOME:-/sabayon}/scripts/remaster_post.sh

# Used to umount /proc and unbind packages dir
%env error_script: ${SABAYON_MOLECULE_HOME:-/sabayon}/scripts/remaster_error_script.sh

# Pre-ISO building script. Hook to be able to copy kernel images in place, for example
%env pre_iso_script: ${SABAYON_MOLECULE_HOME:-/sabayon}/scripts/generic_pre_iso_script.sh MATE

# Destination directory for the ISO image path (MANDATORY)
%env destination_iso_directory: ${SABAYON_MOLECULE_HOME:-/sabayon}/iso

# List of packages that would be removed from chrooted system (comma separated)
# packages_to_remove:

# Import the Graphic Environment module.
%env %import ${SABAYON_MOLECULE_HOME:-/sabayon}/molecules/graphic-environment.common

# List of packages that would be added from chrooted system (comma separated)
packages_to_add:
	@wireless,
	app-admin/rigo,
	app-crypt/gnupg,
	app-misc/sabayon-greeter,
	app-crypt/pinentry-gtk2,
	app-misc/calamares-sabayon,
	app-text/pastebunz,
	app-office/libreoffice,
	gnome-extra/nm-applet,
	mate-base/mate,
	mate-extra/mate-sensors-applet,
	media-libs/libopenraw,
	media-plugins/alsa-plugins,
	media-sound/audacious,
	media-video/mpv,
	net-dialup/rp-pppoe,
	net-irc/hexchat,
	net-p2p/transmission-gtk,
	x11-libs/gksu,
	sys-apps/gnome-disk-utility,
	sys-apps/usbutils,
	sys-block/gparted,
	sys-boot/os-prober,
	sys-fs/ntfs3g,
	sys-power/cpupower,
	www-client/firefox,
	x11-misc/magneto-gtk,
	x11-misc/mate-notification-daemon,
	x11-misc/lightdm-base,
	x11-misc/lightdm-slick-greeter,
	x11-terms/guake,
	x11-themes/gnome-themes-standard,
	x11-themes/sabayon-artwork-core,
	x11-themes/sabayon-artwork-grub,
	x11-themes/sabayon-artwork-lightdm-slick-greeter,
	x11-themes/sabayon-artwork-mate

# Custom shell call to packages add (default is: equo install)
# custom_packages_add_cmd: 

# Custom command for updating repositories (default is: equo update)
# repositories_update_cmd:

# Determine whether repositories update should be run (if packages_to_add is set)
# (default is: no), values are: yes, no.
execute_repositories_update: no

# Directories to remove completely (comma separated)
# paths_to_remove:

# Directories to empty (comma separated)
# paths_to_empty:
